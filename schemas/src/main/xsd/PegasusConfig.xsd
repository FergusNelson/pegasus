<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://brekka.org/xml/pegasus/v2/config"
	xmlns:plxc="http://brekka.org/xml/pegasus/v2/config" xmlns:pnxm="http://brekka.org/xml/phoenix/v2/model" 
    xmlns:pgm="http://brekka.org/xml/pegasus/v2/model"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	
	<xsd:import namespace="http://brekka.org/xml/phoenix/v2/model" />
	<xsd:import namespace="http://brekka.org/xml/pegasus/v2/model" />
	
	<xsd:element name="Pegasus">
		<xsd:complexType>
			<xsd:sequence>
                <xsd:element name="FetchBase" type="xsd:anyURI" />
                <xsd:element name="ResourceStoreDir" type="xsd:anyURI" />
                <xsd:element name="Administration">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="UserOpenID"  type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element ref="plxc:EMailAddressService" />
                <xsd:element name="AnonymousTransfer">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Firewall" type="plxc:FirewallType" />
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="MemberSignup">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Firewall" type="plxc:FirewallType" />
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="PhalanxClient">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ServiceURI" type="xsd:anyURI" ></xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
				<xsd:element ref="pnxm:CryptoProfileRegistry" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
    
    <xsd:element name="EMailAddressService">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="SystemDerivedKeySpec" type="plxc:SystemDerivedKeySpecType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="UsernamePasswordService">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="SystemDerivedKeySpec" type="plxc:SystemDerivedKeySpecType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="CertificateAuthenticationService">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="SubjectDerivedKeySpec" type="plxc:SystemDerivedKeySpecType" />
                <xsd:element name="SubjectDistinguishedNamePattern" type="xsd:string" maxOccurs="unbounded">
                    <xsd:annotation>
                        <xsd:documentation>The pattern used to identify allowed certificates based on their subject distinguished name. A single capturing group can be specified that will be used to resolve the common name that will be returned as a username.</xsd:documentation>
                    </xsd:annotation></xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:complexType name="SystemDerivedKeySpecType">
        <xsd:sequence>
            <xsd:element name="CryptoProfile"  type="plxc:CryptoProfileRefType" />
            <xsd:element name="Iterations" type="xsd:int" />
            <xsd:element name="Salt"       type="xsd:base64Binary" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:simpleType name="CryptoProfileRefType" >
        <xsd:restriction base="xsd:int" />
    </xsd:simpleType>
    
    <xsd:complexType name="FirewallType">
        <xsd:sequence>
            <xsd:element name="ID" type="pgm:UUIDType" />
            <xsd:element name="Name" type="xsd:string" />
            <xsd:element name="Network" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    
</xsd:schema>
